// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protoc/node.proto

/*
Package node is a generated protocol buffer package.

It is generated from these files:
	protoc/node.proto

It has these top-level messages:
	Info
	StatusParams
	SyncParams
	NewBlock
	Block
	PushReturn
*/
package node

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Info struct {
	Version         string `protobuf:"bytes,1,opt,name=Version" json:"Version,omitempty"`
	Valid           bool   `protobuf:"varint,2,opt,name=Valid" json:"Valid,omitempty"`
	Length          uint64 `protobuf:"varint,3,opt,name=Length" json:"Length,omitempty"`
	LastHash        []byte `protobuf:"bytes,4,opt,name=LastHash,proto3" json:"LastHash,omitempty"`
	ListenInterface string `protobuf:"bytes,5,opt,name=ListenInterface" json:"ListenInterface,omitempty"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Info) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Info) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Info) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Info) GetLastHash() []byte {
	if m != nil {
		return m.LastHash
	}
	return nil
}

func (m *Info) GetListenInterface() string {
	if m != nil {
		return m.ListenInterface
	}
	return ""
}

type StatusParams struct {
	Host string `protobuf:"bytes,1,opt,name=Host" json:"Host,omitempty"`
}

func (m *StatusParams) Reset()                    { *m = StatusParams{} }
func (m *StatusParams) String() string            { return proto.CompactTextString(m) }
func (*StatusParams) ProtoMessage()               {}
func (*StatusParams) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StatusParams) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type SyncParams struct {
	LastHash []byte `protobuf:"bytes,1,opt,name=LastHash,proto3" json:"LastHash,omitempty"`
}

func (m *SyncParams) Reset()                    { *m = SyncParams{} }
func (m *SyncParams) String() string            { return proto.CompactTextString(m) }
func (*SyncParams) ProtoMessage()               {}
func (*SyncParams) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SyncParams) GetLastHash() []byte {
	if m != nil {
		return m.LastHash
	}
	return nil
}

type NewBlock struct {
	Content  string `protobuf:"bytes,1,opt,name=Content" json:"Content,omitempty"`
	FromNode string `protobuf:"bytes,2,opt,name=FromNode" json:"FromNode,omitempty"`
	B        *Block `protobuf:"bytes,3,opt,name=b" json:"b,omitempty"`
}

func (m *NewBlock) Reset()                    { *m = NewBlock{} }
func (m *NewBlock) String() string            { return proto.CompactTextString(m) }
func (*NewBlock) ProtoMessage()               {}
func (*NewBlock) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NewBlock) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *NewBlock) GetFromNode() string {
	if m != nil {
		return m.FromNode
	}
	return ""
}

func (m *NewBlock) GetB() *Block {
	if m != nil {
		return m.B
	}
	return nil
}

type Block struct {
	Content   string `protobuf:"bytes,1,opt,name=Content" json:"Content,omitempty"`
	Nonce     uint32 `protobuf:"varint,2,opt,name=Nonce" json:"Nonce,omitempty"`
	Previous  []byte `protobuf:"bytes,3,opt,name=Previous,proto3" json:"Previous,omitempty"`
	Type      string `protobuf:"bytes,5,opt,name=Type" json:"Type,omitempty"`
	PubKey    string `protobuf:"bytes,6,opt,name=PubKey" json:"PubKey,omitempty"`
	Date      int64  `protobuf:"varint,7,opt,name=Date" json:"Date,omitempty"`
	Signature string `protobuf:"bytes,8,opt,name=Signature" json:"Signature,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Block) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Block) GetNonce() uint32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Block) GetPrevious() []byte {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *Block) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Block) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *Block) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Block) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type PushReturn struct {
}

func (m *PushReturn) Reset()                    { *m = PushReturn{} }
func (m *PushReturn) String() string            { return proto.CompactTextString(m) }
func (*PushReturn) ProtoMessage()               {}
func (*PushReturn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*Info)(nil), "Info")
	proto.RegisterType((*StatusParams)(nil), "StatusParams")
	proto.RegisterType((*SyncParams)(nil), "SyncParams")
	proto.RegisterType((*NewBlock)(nil), "NewBlock")
	proto.RegisterType((*Block)(nil), "Block")
	proto.RegisterType((*PushReturn)(nil), "PushReturn")
}

func init() { proto.RegisterFile("protoc/node.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x6b, 0xb6, 0x69, 0xd3, 0x69, 0x11, 0x60, 0x2a, 0x64, 0x2a, 0x0e, 0xc1, 0x07, 0x94,
	0x03, 0x0a, 0x68, 0x79, 0x02, 0x60, 0x05, 0xbb, 0xa2, 0x54, 0x95, 0x83, 0x7a, 0x77, 0x92, 0xd9,
	0xd6, 0x62, 0xd7, 0x5e, 0xd9, 0xce, 0xa2, 0xf2, 0x1c, 0xbc, 0x04, 0x47, 0xde, 0x10, 0xc5, 0x49,
	0x5a, 0xd8, 0xcb, 0x9e, 0x3c, 0xdf, 0x68, 0xf4, 0xff, 0x9e, 0xdf, 0x86, 0x27, 0x37, 0xd6, 0x78,
	0x53, 0xbe, 0xd1, 0xa6, 0xc2, 0x2c, 0xd4, 0xfc, 0x17, 0x81, 0xe1, 0x85, 0xbe, 0x34, 0x94, 0xc1,
	0x78, 0x83, 0xd6, 0x29, 0xa3, 0x19, 0x49, 0x48, 0x3a, 0x11, 0x3d, 0xd2, 0x39, 0x44, 0x1b, 0x79,
	0xa5, 0x2a, 0xf6, 0x20, 0x21, 0x69, 0x2c, 0x5a, 0xa0, 0xcf, 0x60, 0xb4, 0x44, 0xbd, 0xf5, 0x3b,
	0x76, 0x92, 0x90, 0x74, 0x28, 0x3a, 0xa2, 0x0b, 0x88, 0x97, 0xd2, 0xf9, 0x73, 0xe9, 0x76, 0x6c,
	0x98, 0x90, 0x74, 0x26, 0x0e, 0x4c, 0x53, 0x78, 0xb4, 0x54, 0xce, 0xa3, 0xbe, 0xd0, 0x1e, 0xed,
	0xa5, 0x2c, 0x91, 0x45, 0xc1, 0xeb, 0x6e, 0x9b, 0x73, 0x98, 0xe5, 0x5e, 0xfa, 0xda, 0xad, 0xa5,
	0x95, 0xd7, 0x8e, 0x52, 0x18, 0x9e, 0x1b, 0xe7, 0xbb, 0xab, 0x85, 0x9a, 0xa7, 0x00, 0xf9, 0x5e,
	0x97, 0xdd, 0xc4, 0xbf, 0xbe, 0xe4, 0x7f, 0x5f, 0xbe, 0x81, 0x78, 0x85, 0x3f, 0x3e, 0x5c, 0x99,
	0xf2, 0x7b, 0xb3, 0xe7, 0x47, 0xa3, 0x3d, 0xea, 0x5e, 0xac, 0xc7, 0x46, 0xe1, 0x93, 0x35, 0xd7,
	0x2b, 0x53, 0x61, 0x58, 0x75, 0x22, 0x0e, 0x4c, 0xe7, 0x40, 0x8a, 0xb0, 0xe8, 0xf4, 0x74, 0x94,
	0x05, 0x21, 0x41, 0x0a, 0xfe, 0x87, 0x40, 0x74, 0x9f, 0xea, 0x1c, 0xa2, 0x95, 0xd1, 0x65, 0x2b,
	0xf9, 0x50, 0xb4, 0xd0, 0x78, 0xad, 0x2d, 0xde, 0x2a, 0x53, 0xbb, 0x20, 0x3b, 0x13, 0x07, 0x6e,
	0x76, 0xfd, 0xb6, 0xbf, 0xe9, 0xa3, 0x09, 0x75, 0x93, 0xf6, 0xba, 0x2e, 0xbe, 0xe0, 0x9e, 0x8d,
	0x42, 0xb7, 0xa3, 0x66, 0xf6, 0x4c, 0x7a, 0x64, 0xe3, 0x84, 0xa4, 0x27, 0x22, 0xd4, 0xf4, 0x05,
	0x4c, 0x72, 0xb5, 0xd5, 0xd2, 0xd7, 0x16, 0x59, 0x1c, 0xc6, 0x8f, 0x0d, 0x3e, 0x03, 0x58, 0xd7,
	0x6e, 0x27, 0xd0, 0xd7, 0x56, 0x9f, 0xfe, 0x26, 0xf0, 0xf4, 0x4c, 0x39, 0x6f, 0x55, 0x51, 0x7b,
	0x65, 0x74, 0x8e, 0xf6, 0x56, 0x95, 0x48, 0x9f, 0xc3, 0xf8, 0x33, 0xfa, 0xf0, 0x31, 0xa2, 0xac,
	0x39, 0x16, 0xed, 0xc1, 0x07, 0xf4, 0x15, 0x4c, 0x9b, 0xd8, 0x77, 0xd6, 0x68, 0xf5, 0x13, 0xe9,
	0x34, 0x3b, 0x3e, 0xc2, 0xa2, 0xcb, 0x86, 0x0f, 0xde, 0x12, 0xfa, 0x12, 0xe2, 0xf7, 0x55, 0xd5,
	0xc6, 0xd3, 0xf5, 0x17, 0xd3, 0xec, 0xe8, 0xcd, 0x07, 0xf4, 0x35, 0x3c, 0xce, 0x51, 0xb7, 0x33,
	0x5f, 0xd1, 0x39, 0xb9, 0x45, 0x3a, 0xc9, 0xfa, 0xa7, 0xba, 0x33, 0x5d, 0x8c, 0xc2, 0x8f, 0x7d,
	0xf7, 0x37, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x96, 0xfd, 0x95, 0xc6, 0x02, 0x00, 0x00,
}
